#!/bin/sh
MYPATH=$(dirname "$0")
source $1
SLIM_PORT=$2
APPLICATION_PATH=${TARGET_BUILD_DIR}/${EXECUTABLE_FOLDER_PATH}
DEPLOYMENT_TARGET_VALUE=$( echo "$DEPLOYMENT_TARGET_SUGGESTED_VALUES" | rev | cut -d " " -f1 | rev )

get_app_devicetypeid() {

	local DEVICETYPE_ID=
	local BOOTED_DEVICE_NAME=$(xcrun simctl list devices | grep "Booted" | cut -d "(" -f1 | awk '{gsub(/^ +| +$/,"")} {print $0}')
	
	if [ ! -z "$BOOTED_DEVICE_NAME" ]; then
		DEVICETYPE_ID=$(xcrun simctl list devicetypes | grep "^$BOOTED_DEVICE_NAME (com.apple" | cut -d "(" -f2 | cut -d ")" -f1)
	else
		DEVICETYPE_ID=$(xcrun simctl list devicetypes | grep "$DEVICE_TYPE" | tail -n1 | cut -d "(" -f2 | cut -d ")" -f1)
	fi
	
	if [ -z "$DEVICETYPE_ID" ]; then
		log "Device Type Identifier For $DEVICE_TYPE Missing"
		exit 1
	fi

	echo "$DEVICETYPE_ID, $DEPLOYMENT_TARGET_VALUE"
}

slim_system_wait() {
	
	local EXECUTABLE_PID=$(<.simctl.pid)
	
	log "Waiting for Slim System... ($EXECUTABLE_PID) $(date)"
	
	while ps -p $EXECUTABLE_PID
	do
		sleep 1
	done
	
	log "Slim System Exited $(date)"
}

run_test_system() {
	log "Start Slim Test Sytem"
	"$MYPATH/simctl" $APPLICATION_PATH $SLIM_PORT
 	if [ $? == 0 ]; then 
	 	slim_system_wait; 
	else 
		log "**ABORTING** For details click the red/green 'Execution Log' button in Fitnesse to view stdout and stderr logs"
	 	error "**ABORTING** Exit Code error detected when executing Slim Test Sytem with ($MYPATH/simctl)"
	fi
}

main() {
	log "== RunSlimTestTargetWithSlimPort~iOS:$SLIM_PORT $(date)=="
	log "Info: Test System Suggested SDK: $DEPLOYMENT_TARGET_VALUE"
	log "Info: Test System Path: $APPLICATION_PATH"
	run_test_system 
	exit $?
}

log() {
	echo "[OCSP_RUN] $1"
}

error() {
	>&2 echo "[OCSP_RUN] $1"
	exit 1
}

main
